// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GScommon.proto

#ifndef PROTOBUF_GScommon_2eproto__INCLUDED
#define PROTOBUF_GScommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Connd {
namespace Common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GScommon_2eproto();
void protobuf_AssignDesc_GScommon_2eproto();
void protobuf_ShutdownFile_GScommon_2eproto();

class User;

enum Command {
  CS_LOGIN = 1,
  SC_LOGIN = 2
};
bool Command_IsValid(int value);
const Command Command_MIN = CS_LOGIN;
const Command Command_MAX = SC_LOGIN;
const int Command_ARRAYSIZE = Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* Command_descriptor();
inline const ::std::string& Command_Name(Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    Command_descriptor(), value);
}
inline bool Command_Parse(
    const ::std::string& name, Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Command>(
    Command_descriptor(), name, value);
}
// ===================================================================

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 QQ = 1;
  inline bool has_qq() const;
  inline void clear_qq();
  static const int kQQFieldNumber = 1;
  inline ::google::protobuf::uint64 qq() const;
  inline void set_qq(::google::protobuf::uint64 value);

  // required uint32 appId = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Connd.Common.User)
 private:
  inline void set_has_qq();
  inline void clear_has_qq();
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qq_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GScommon_2eproto();
  friend void protobuf_AssignDesc_GScommon_2eproto();
  friend void protobuf_ShutdownFile_GScommon_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// ===================================================================


// ===================================================================

// User

// required uint64 QQ = 1;
inline bool User::has_qq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User::set_has_qq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User::clear_has_qq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User::clear_qq() {
  qq_ = GOOGLE_ULONGLONG(0);
  clear_has_qq();
}
inline ::google::protobuf::uint64 User::qq() const {
  return qq_;
}
inline void User::set_qq(::google::protobuf::uint64 value) {
  set_has_qq();
  qq_ = value;
}

// required uint32 appId = 2;
inline bool User::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 User::appid() const {
  return appid_;
}
inline void User::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Common
}  // namespace Connd

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Connd::Common::Command>() {
  return ::Connd::Common::Command_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GScommon_2eproto__INCLUDED
