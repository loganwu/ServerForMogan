// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GSProtocol.proto

#ifndef PROTOBUF_GSProtocol_2eproto__INCLUDED
#define PROTOBUF_GSProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "GScommon.pb.h"
#include "GSdata.pb.h"
// @@protoc_insertion_point(includes)

namespace Connd {
namespace Protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GSProtocol_2eproto();
void protobuf_AssignDesc_GSProtocol_2eproto();
void protobuf_ShutdownFile_GSProtocol_2eproto();

class GSHeader;
class GSBody;
class GSPkg;

// ===================================================================

class GSHeader : public ::google::protobuf::Message {
 public:
  GSHeader();
  virtual ~GSHeader();

  GSHeader(const GSHeader& from);

  inline GSHeader& operator=(const GSHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSHeader& default_instance();

  void Swap(GSHeader* other);

  // implements Message ----------------------------------------------

  GSHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSHeader& from);
  void MergeFrom(const GSHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 packageLen = 1;
  inline bool has_packagelen() const;
  inline void clear_packagelen();
  static const int kPackageLenFieldNumber = 1;
  inline ::google::protobuf::uint32 packagelen() const;
  inline void set_packagelen(::google::protobuf::uint32 value);

  // required uint32 cmdId = 2;
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdIdFieldNumber = 2;
  inline ::google::protobuf::uint32 cmdid() const;
  inline void set_cmdid(::google::protobuf::uint32 value);

  // optional uint32 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Connd.Protocol.GSHeader)
 private:
  inline void set_has_packagelen();
  inline void clear_has_packagelen();
  inline void set_has_cmdid();
  inline void clear_has_cmdid();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 packagelen_;
  ::google::protobuf::uint32 cmdid_;
  ::google::protobuf::uint32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GSProtocol_2eproto();
  friend void protobuf_AssignDesc_GSProtocol_2eproto();
  friend void protobuf_ShutdownFile_GSProtocol_2eproto();

  void InitAsDefaultInstance();
  static GSHeader* default_instance_;
};
// -------------------------------------------------------------------

class GSBody : public ::google::protobuf::Message {
 public:
  GSBody();
  virtual ~GSBody();

  GSBody(const GSBody& from);

  inline GSBody& operator=(const GSBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSBody& default_instance();

  void Swap(GSBody* other);

  // implements Message ----------------------------------------------

  GSBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSBody& from);
  void MergeFrom(const GSBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Connd.Data.CSLoginData csLoginData = 1;
  inline bool has_cslogindata() const;
  inline void clear_cslogindata();
  static const int kCsLoginDataFieldNumber = 1;
  inline const ::Connd::Data::CSLoginData& cslogindata() const;
  inline ::Connd::Data::CSLoginData* mutable_cslogindata();
  inline ::Connd::Data::CSLoginData* release_cslogindata();
  inline void set_allocated_cslogindata(::Connd::Data::CSLoginData* cslogindata);

  // optional .Connd.Data.SCLoginData scLoginData = 2;
  inline bool has_sclogindata() const;
  inline void clear_sclogindata();
  static const int kScLoginDataFieldNumber = 2;
  inline const ::Connd::Data::SCLoginData& sclogindata() const;
  inline ::Connd::Data::SCLoginData* mutable_sclogindata();
  inline ::Connd::Data::SCLoginData* release_sclogindata();
  inline void set_allocated_sclogindata(::Connd::Data::SCLoginData* sclogindata);

  // @@protoc_insertion_point(class_scope:Connd.Protocol.GSBody)
 private:
  inline void set_has_cslogindata();
  inline void clear_has_cslogindata();
  inline void set_has_sclogindata();
  inline void clear_has_sclogindata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Connd::Data::CSLoginData* cslogindata_;
  ::Connd::Data::SCLoginData* sclogindata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GSProtocol_2eproto();
  friend void protobuf_AssignDesc_GSProtocol_2eproto();
  friend void protobuf_ShutdownFile_GSProtocol_2eproto();

  void InitAsDefaultInstance();
  static GSBody* default_instance_;
};
// -------------------------------------------------------------------

class GSPkg : public ::google::protobuf::Message {
 public:
  GSPkg();
  virtual ~GSPkg();

  GSPkg(const GSPkg& from);

  inline GSPkg& operator=(const GSPkg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSPkg& default_instance();

  void Swap(GSPkg* other);

  // implements Message ----------------------------------------------

  GSPkg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSPkg& from);
  void MergeFrom(const GSPkg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Connd.Protocol.GSHeader header = 1;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 1;
  inline const ::Connd::Protocol::GSHeader& header() const;
  inline ::Connd::Protocol::GSHeader* mutable_header();
  inline ::Connd::Protocol::GSHeader* release_header();
  inline void set_allocated_header(::Connd::Protocol::GSHeader* header);

  // required .Connd.Protocol.GSBody body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline const ::Connd::Protocol::GSBody& body() const;
  inline ::Connd::Protocol::GSBody* mutable_body();
  inline ::Connd::Protocol::GSBody* release_body();
  inline void set_allocated_body(::Connd::Protocol::GSBody* body);

  // @@protoc_insertion_point(class_scope:Connd.Protocol.GSPkg)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Connd::Protocol::GSHeader* header_;
  ::Connd::Protocol::GSBody* body_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GSProtocol_2eproto();
  friend void protobuf_AssignDesc_GSProtocol_2eproto();
  friend void protobuf_ShutdownFile_GSProtocol_2eproto();

  void InitAsDefaultInstance();
  static GSPkg* default_instance_;
};
// ===================================================================


// ===================================================================

// GSHeader

// required uint32 packageLen = 1;
inline bool GSHeader::has_packagelen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSHeader::set_has_packagelen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSHeader::clear_has_packagelen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSHeader::clear_packagelen() {
  packagelen_ = 0u;
  clear_has_packagelen();
}
inline ::google::protobuf::uint32 GSHeader::packagelen() const {
  return packagelen_;
}
inline void GSHeader::set_packagelen(::google::protobuf::uint32 value) {
  set_has_packagelen();
  packagelen_ = value;
}

// required uint32 cmdId = 2;
inline bool GSHeader::has_cmdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSHeader::set_has_cmdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSHeader::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSHeader::clear_cmdid() {
  cmdid_ = 0u;
  clear_has_cmdid();
}
inline ::google::protobuf::uint32 GSHeader::cmdid() const {
  return cmdid_;
}
inline void GSHeader::set_cmdid(::google::protobuf::uint32 value) {
  set_has_cmdid();
  cmdid_ = value;
}

// optional uint32 version = 3;
inline bool GSHeader::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GSHeader::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GSHeader::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GSHeader::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 GSHeader::version() const {
  return version_;
}
inline void GSHeader::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// GSBody

// optional .Connd.Data.CSLoginData csLoginData = 1;
inline bool GSBody::has_cslogindata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSBody::set_has_cslogindata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSBody::clear_has_cslogindata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSBody::clear_cslogindata() {
  if (cslogindata_ != NULL) cslogindata_->::Connd::Data::CSLoginData::Clear();
  clear_has_cslogindata();
}
inline const ::Connd::Data::CSLoginData& GSBody::cslogindata() const {
  return cslogindata_ != NULL ? *cslogindata_ : *default_instance_->cslogindata_;
}
inline ::Connd::Data::CSLoginData* GSBody::mutable_cslogindata() {
  set_has_cslogindata();
  if (cslogindata_ == NULL) cslogindata_ = new ::Connd::Data::CSLoginData;
  return cslogindata_;
}
inline ::Connd::Data::CSLoginData* GSBody::release_cslogindata() {
  clear_has_cslogindata();
  ::Connd::Data::CSLoginData* temp = cslogindata_;
  cslogindata_ = NULL;
  return temp;
}
inline void GSBody::set_allocated_cslogindata(::Connd::Data::CSLoginData* cslogindata) {
  delete cslogindata_;
  cslogindata_ = cslogindata;
  if (cslogindata) {
    set_has_cslogindata();
  } else {
    clear_has_cslogindata();
  }
}

// optional .Connd.Data.SCLoginData scLoginData = 2;
inline bool GSBody::has_sclogindata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSBody::set_has_sclogindata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSBody::clear_has_sclogindata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSBody::clear_sclogindata() {
  if (sclogindata_ != NULL) sclogindata_->::Connd::Data::SCLoginData::Clear();
  clear_has_sclogindata();
}
inline const ::Connd::Data::SCLoginData& GSBody::sclogindata() const {
  return sclogindata_ != NULL ? *sclogindata_ : *default_instance_->sclogindata_;
}
inline ::Connd::Data::SCLoginData* GSBody::mutable_sclogindata() {
  set_has_sclogindata();
  if (sclogindata_ == NULL) sclogindata_ = new ::Connd::Data::SCLoginData;
  return sclogindata_;
}
inline ::Connd::Data::SCLoginData* GSBody::release_sclogindata() {
  clear_has_sclogindata();
  ::Connd::Data::SCLoginData* temp = sclogindata_;
  sclogindata_ = NULL;
  return temp;
}
inline void GSBody::set_allocated_sclogindata(::Connd::Data::SCLoginData* sclogindata) {
  delete sclogindata_;
  sclogindata_ = sclogindata;
  if (sclogindata) {
    set_has_sclogindata();
  } else {
    clear_has_sclogindata();
  }
}

// -------------------------------------------------------------------

// GSPkg

// required .Connd.Protocol.GSHeader header = 1;
inline bool GSPkg::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSPkg::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSPkg::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSPkg::clear_header() {
  if (header_ != NULL) header_->::Connd::Protocol::GSHeader::Clear();
  clear_has_header();
}
inline const ::Connd::Protocol::GSHeader& GSPkg::header() const {
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::Connd::Protocol::GSHeader* GSPkg::mutable_header() {
  set_has_header();
  if (header_ == NULL) header_ = new ::Connd::Protocol::GSHeader;
  return header_;
}
inline ::Connd::Protocol::GSHeader* GSPkg::release_header() {
  clear_has_header();
  ::Connd::Protocol::GSHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GSPkg::set_allocated_header(::Connd::Protocol::GSHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
}

// required .Connd.Protocol.GSBody body = 2;
inline bool GSPkg::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSPkg::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSPkg::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSPkg::clear_body() {
  if (body_ != NULL) body_->::Connd::Protocol::GSBody::Clear();
  clear_has_body();
}
inline const ::Connd::Protocol::GSBody& GSPkg::body() const {
  return body_ != NULL ? *body_ : *default_instance_->body_;
}
inline ::Connd::Protocol::GSBody* GSPkg::mutable_body() {
  set_has_body();
  if (body_ == NULL) body_ = new ::Connd::Protocol::GSBody;
  return body_;
}
inline ::Connd::Protocol::GSBody* GSPkg::release_body() {
  clear_has_body();
  ::Connd::Protocol::GSBody* temp = body_;
  body_ = NULL;
  return temp;
}
inline void GSPkg::set_allocated_body(::Connd::Protocol::GSBody* body) {
  delete body_;
  body_ = body;
  if (body) {
    set_has_body();
  } else {
    clear_has_body();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol
}  // namespace Connd

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GSProtocol_2eproto__INCLUDED
